import {
  __commonJS
} from "./chunk-5WRI5ZAA.js";

// node_modules/dom-to-image-more/dist/dom-to-image-more.min.js
var require_dom_to_image_more_min = __commonJS({
  "node_modules/dom-to-image-more/dist/dom-to-image-more.min.js"(exports, module) {
    ((l) => {
      let f = /* @__PURE__ */ (() => {
        let e2 = 0;
        return { escape: function(e3) {
          return e3.replace(/([.*+?^${}()|[\]/\\])/g, "\\$1");
        }, isDataUrl: function(e3) {
          return -1 !== e3.search(/^(data:)/);
        }, canvasToBlob: function(t3) {
          if (t3.toBlob) return new Promise(function(e3) {
            t3.toBlob(e3);
          });
          return ((r3) => new Promise(function(e3) {
            var t4 = u(r3.toDataURL().split(",")[1]), n3 = t4.length, o3 = new Uint8Array(n3);
            for (let e4 = 0; e4 < n3; e4++) o3[e4] = t4.charCodeAt(e4);
            e3(new Blob([o3], { type: "image/png" }));
          }))(t3);
        }, resolveUrl: function(e3, t3) {
          var n3 = document.implementation.createHTMLDocument(), o3 = n3.createElement("base"), r3 = (n3.head.appendChild(o3), n3.createElement("a"));
          return n3.body.appendChild(r3), o3.href = t3, r3.href = e3, r3.href;
        }, getAndEncode: function(s2) {
          let e3 = d.impl.urlCache.find(function(e4) {
            return e4.url === s2;
          });
          e3 || (e3 = { url: s2, promise: null }, d.impl.urlCache.push(e3));
          null === e3.promise && (d.impl.options.cacheBust && (s2 += (/\?/.test(s2) ? "&" : "?") + (/* @__PURE__ */ new Date()).getTime()), e3.promise = new Promise(function(t3) {
            let e4 = d.impl.options.httpTimeout, r3 = new XMLHttpRequest();
            if (r3.onreadystatechange = function() {
              if (4 === r3.readyState) if (300 <= r3.status) n3 ? t3(n3) : l2(`cannot fetch resource: ${s2}, status: ` + r3.status);
              else {
                let e5 = new FileReader();
                e5.onloadend = function() {
                  t3(e5.result);
                }, e5.readAsDataURL(r3.response);
              }
            }, r3.ontimeout = function() {
              n3 ? t3(n3) : l2(`timeout of ${e4}ms occured while fetching resource: ` + s2);
            }, r3.responseType = "blob", r3.timeout = e4, 0 < d.impl.options.useCredentialsFilters.length && (d.impl.options.useCredentials = 0 < d.impl.options.useCredentialsFilters.filter((e5) => 0 <= s2.search(e5)).length), d.impl.options.useCredentials && (r3.withCredentials = true), d.impl.options.corsImg && 0 === s2.indexOf("http") && -1 === s2.indexOf(window.location.origin)) {
              var i3 = "POST" === (d.impl.options.corsImg.method || "GET").toUpperCase() ? "POST" : "GET";
              r3.open(i3, (d.impl.options.corsImg.url || "").replace("#{cors}", s2), true);
              let t4 = false, n4 = d.impl.options.corsImg.headers || {}, o3 = (Object.keys(n4).forEach(function(e5) {
                -1 !== n4[e5].indexOf("application/json") && (t4 = true), r3.setRequestHeader(e5, n4[e5]);
              }), ((e5) => {
                try {
                  return JSON.parse(JSON.stringify(e5));
                } catch (e6) {
                  l2("corsImg.data is missing or invalid:" + e6.toString());
                }
              })(d.impl.options.corsImg.data || ""));
              Object.keys(o3).forEach(function(e5) {
                "string" == typeof o3[e5] && (o3[e5] = o3[e5].replace("#{cors}", s2));
              }), r3.send(t4 ? JSON.stringify(o3) : o3);
            } else r3.open("GET", s2, true), r3.send();
            let n3;
            function l2(e5) {
              console.error(e5), t3("");
            }
            d.impl.options.imagePlaceholder && (i3 = d.impl.options.imagePlaceholder.split(/,/)) && i3[1] && (n3 = i3[1]);
          }));
          return e3.promise;
        }, uid: function() {
          return "u" + ("0000" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4) + e2++;
        }, delay: function(n3) {
          return function(t3) {
            return new Promise(function(e3) {
              setTimeout(function() {
                e3(t3);
              }, n3);
            });
          };
        }, asArray: function(t3) {
          var n3 = [], o3 = t3.length;
          for (let e3 = 0; e3 < o3; e3++) n3.push(t3[e3]);
          return n3;
        }, escapeXhtml: function(e3) {
          return e3.replace(/%/g, "%25").replace(/#/g, "%23").replace(/\n/g, "%0A");
        }, makeImage: function(r3) {
          return "data:," !== r3 ? new Promise(function(e3, t3) {
            let n3 = document.createElementNS("http://www.w3.org/2000/svg", "svg"), o3 = new Image();
            d.impl.options.useCredentials && (o3.crossOrigin = "use-credentials"), o3.onload = function() {
              document.body.removeChild(n3), window && window.requestAnimationFrame ? window.requestAnimationFrame(function() {
                e3(o3);
              }) : e3(o3);
            }, o3.onerror = (e4) => {
              document.body.removeChild(n3), t3(e4);
            }, n3.appendChild(o3), o3.src = r3, document.body.appendChild(n3);
          }) : Promise.resolve();
        }, width: function(e3) {
          var t3 = i2(e3, "width");
          if (!isNaN(t3)) return t3;
          var t3 = i2(e3, "border-left-width"), n3 = i2(e3, "border-right-width");
          return e3.scrollWidth + t3 + n3;
        }, height: function(e3) {
          var t3 = i2(e3, "height");
          if (!isNaN(t3)) return t3;
          var t3 = i2(e3, "border-top-width"), n3 = i2(e3, "border-bottom-width");
          return e3.scrollHeight + t3 + n3;
        }, getWindow: t2, isElement: r2, isElementHostForOpenShadowRoot: function(e3) {
          return r2(e3) && null !== e3.shadowRoot;
        }, isShadowRoot: n2, isInShadowRoot: o2, isHTMLElement: function(e3) {
          return e3 instanceof t2(e3).HTMLElement;
        }, isHTMLCanvasElement: function(e3) {
          return e3 instanceof t2(e3).HTMLCanvasElement;
        }, isHTMLInputElement: function(e3) {
          return e3 instanceof t2(e3).HTMLInputElement;
        }, isHTMLImageElement: function(e3) {
          return e3 instanceof t2(e3).HTMLImageElement;
        }, isHTMLLinkElement: function(e3) {
          return e3 instanceof t2(e3).HTMLLinkElement;
        }, isHTMLScriptElement: function(e3) {
          return e3 instanceof t2(e3).HTMLScriptElement;
        }, isHTMLStyleElement: function(e3) {
          return e3 instanceof t2(e3).HTMLStyleElement;
        }, isHTMLTextAreaElement: function(e3) {
          return e3 instanceof t2(e3).HTMLTextAreaElement;
        }, isShadowSlotElement: function(e3) {
          return o2(e3) && e3 instanceof t2(e3).HTMLSlotElement;
        }, isSVGElement: function(e3) {
          return e3 instanceof t2(e3).SVGElement;
        }, isSVGRectElement: function(e3) {
          return e3 instanceof t2(e3).SVGRectElement;
        }, isDimensionMissing: function(e3) {
          return isNaN(e3) || e3 <= 0;
        } };
        function t2(e3) {
          e3 = e3 ? e3.ownerDocument : void 0;
          return (e3 ? e3.defaultView : void 0) || window || l;
        }
        function n2(e3) {
          return e3 instanceof t2(e3).ShadowRoot;
        }
        function o2(e3) {
          return null != e3 && void 0 !== e3.getRootNode && n2(e3.getRootNode());
        }
        function r2(e3) {
          return e3 instanceof t2(e3).Element;
        }
        function i2(t3, n3) {
          if (t3.nodeType === m) {
            let e3 = h(t3).getPropertyValue(n3);
            if ("px" === e3.slice(-2)) return e3 = e3.slice(0, -2), parseFloat(e3);
          }
          return NaN;
        }
      })(), r = /* @__PURE__ */ (() => {
        let o2 = /url\((["']?)((?:\\?.)*?)\1\)/gm;
        return { inlineAll: function(t2, o3, r3) {
          if (!e2(t2)) return Promise.resolve(t2);
          return Promise.resolve(t2).then(n2).then(function(e3) {
            let n3 = Promise.resolve(t2);
            return e3.forEach(function(t3) {
              n3 = n3.then(function(e4) {
                return i2(e4, t3, o3, r3);
              });
            }), n3;
          });
        }, shouldProcess: e2, impl: { readUrls: n2, inline: i2, urlAsRegex: r2 } };
        function e2(e3) {
          return -1 !== e3.search(o2);
        }
        function n2(e3) {
          for (var t2, n3 = []; null !== (t2 = o2.exec(e3)); ) n3.push(t2[2]);
          return n3.filter(function(e4) {
            return !f.isDataUrl(e4);
          });
        }
        function r2(e3) {
          return new RegExp(`url\\((["']?)(${f.escape(e3)})\\1\\)`, "gm");
        }
        function i2(n3, o3, t2, e3) {
          return Promise.resolve(o3).then(function(e4) {
            return t2 ? f.resolveUrl(e4, t2) : e4;
          }).then(e3 || f.getAndEncode).then(function(e4) {
            var t3 = r2(o3);
            return n3.replace(t3, `url($1${e4}$1)`);
          });
        }
      })(), e = { resolveAll: function() {
        return t().then(function(e2) {
          return Promise.all(e2.map(function(e3) {
            return e3.resolve();
          }));
        }).then(function(e2) {
          return e2.join("\n");
        });
      }, impl: { readAll: t } };
      function t() {
        return Promise.resolve(f.asArray(document.styleSheets)).then(function(e2) {
          let n2 = [];
          return e2.forEach(function(t3) {
            var e3 = Object.getPrototypeOf(t3);
            if (Object.prototype.hasOwnProperty.call(e3, "cssRules")) try {
              f.asArray(t3.cssRules || []).forEach(n2.push.bind(n2));
            } catch (e4) {
              console.error("domtoimage: Error while reading CSS rules from " + t3.href, e4.toString());
            }
          }), n2;
        }).then(function(e2) {
          return e2.filter(function(e3) {
            return e3.type === CSSRule.FONT_FACE_RULE;
          }).filter(function(e3) {
            return r.shouldProcess(e3.style.getPropertyValue("src"));
          });
        }).then(function(e2) {
          return e2.map(t2);
        });
        function t2(t3) {
          return { resolve: function() {
            var e2 = (t3.parentStyleSheet || {}).href;
            return r.inlineAll(t3.cssText, e2);
          }, src: function() {
            return t3.style.getPropertyValue("src");
          } };
        }
      }
      let n = { inlineAll: function t2(e2) {
        if (!f.isElement(e2)) return Promise.resolve(e2);
        return n2(e2).then(function() {
          return f.isHTMLImageElement(e2) ? o(e2).inline() : Promise.all(f.asArray(e2.childNodes).map(function(e3) {
            return t2(e3);
          }));
        });
        function n2(o2) {
          let e3 = ["background", "background-image"], t3 = e3.map(function(t4) {
            let e4 = o2.style.getPropertyValue(t4), n3 = o2.style.getPropertyPriority(t4);
            return e4 ? r.inlineAll(e4).then(function(e5) {
              o2.style.setProperty(t4, e5, n3);
            }) : Promise.resolve();
          });
          return Promise.all(t3).then(function() {
            return o2;
          });
        }
      }, impl: { newImage: o } };
      function o(n2) {
        return { inline: function(e2) {
          if (f.isDataUrl(n2.src)) return Promise.resolve();
          return Promise.resolve(n2.src).then(e2 || f.getAndEncode).then(function(t2) {
            return new Promise(function(e3) {
              n2.onload = e3, n2.onerror = e3, n2.src = t2;
            });
          });
        } };
      }
      let s = { copyDefaultStyles: true, imagePlaceholder: void 0, cacheBust: false, useCredentials: false, useCredentialsFilters: [], httpTimeout: 3e4, styleCaching: "strict", corsImg: void 0, adjustClonedNode: void 0, filterStyles: void 0 }, d = { toSvg: a, toPng: function(e2, t2) {
        return i(e2, t2).then(function(e3) {
          return e3.toDataURL();
        });
      }, toJpeg: function(e2, t2) {
        return i(e2, t2).then(function(e3) {
          return e3.toDataURL("image/jpeg", (t2 ? t2.quality : void 0) || 1);
        });
      }, toBlob: function(e2, t2) {
        return i(e2, t2).then(f.canvasToBlob);
      }, toPixelData: function(t2, e2) {
        return i(t2, e2).then(function(e3) {
          return e3.getContext("2d").getImageData(0, 0, f.width(t2), f.height(t2)).data;
        });
      }, toCanvas: i, impl: { fontFaces: e, images: n, util: f, inliner: r, urlCache: [], options: {} } }, m = ("object" == typeof exports && "object" == typeof module ? module.exports = d : l.domtoimage = d, ("undefined" != typeof Node ? Node.ELEMENT_NODE : void 0) || 1), h = (void 0 !== l ? l.getComputedStyle : void 0) || ("undefined" != typeof window ? window.getComputedStyle : void 0) || globalThis.getComputedStyle, u = (void 0 !== l ? l.atob : void 0) || ("undefined" != typeof window ? window.atob : void 0) || globalThis.atob;
      function a(e2, r2) {
        let t2 = d.impl.util.getWindow(e2);
        var n2 = r2 = r2 || {};
        void 0 === n2.copyDefaultStyles ? d.impl.options.copyDefaultStyles = s.copyDefaultStyles : d.impl.options.copyDefaultStyles = n2.copyDefaultStyles, d.impl.options.imagePlaceholder = (void 0 === n2.imagePlaceholder ? s : n2).imagePlaceholder, d.impl.options.cacheBust = (void 0 === n2.cacheBust ? s : n2).cacheBust, d.impl.options.corsImg = (void 0 === n2.corsImg ? s : n2).corsImg, d.impl.options.useCredentials = (void 0 === n2.useCredentials ? s : n2).useCredentials, d.impl.options.useCredentialsFilters = (void 0 === n2.useCredentialsFilters ? s : n2).useCredentialsFilters, d.impl.options.httpTimeout = (void 0 === n2.httpTimeout ? s : n2).httpTimeout, d.impl.options.styleCaching = (void 0 === n2.styleCaching ? s : n2).styleCaching;
        let i2 = [];
        return Promise.resolve(e2).then(function(e3) {
          if (e3.nodeType === m) return e3;
          var t3 = e3, n3 = e3.parentNode, o2 = document.createElement("span");
          return n3.replaceChild(o2, t3), o2.append(e3), i2.push({ parent: n3, child: t3, wrapper: o2 }), o2;
        }).then(function(e3) {
          return function l2(t3, s2, r3, u2) {
            let e4 = s2.filter;
            if (t3 === p || f.isHTMLScriptElement(t3) || f.isHTMLStyleElement(t3) || f.isHTMLLinkElement(t3) || null !== r3 && e4 && !e4(t3)) return Promise.resolve();
            return Promise.resolve(t3).then(n3).then(o2).then(function(e5) {
              return c2(e5, a2(t3));
            }).then(i3).then(function(e5) {
              return d2(e5, t3);
            });
            function n3(e5) {
              return f.isHTMLCanvasElement(e5) ? f.makeImage(e5.toDataURL()) : e5.cloneNode(false);
            }
            function o2(e5) {
              return s2.adjustClonedNode && s2.adjustClonedNode(t3, e5, false), Promise.resolve(e5);
            }
            function i3(e5) {
              return s2.adjustClonedNode && s2.adjustClonedNode(t3, e5, true), Promise.resolve(e5);
            }
            function a2(e5) {
              return f.isElementHostForOpenShadowRoot(e5) ? e5.shadowRoot : e5;
            }
            function c2(n4, e5) {
              let o3 = t4(e5), r4 = Promise.resolve();
              if (0 !== o3.length) {
                let t5 = h(i4(e5));
                f.asArray(o3).forEach(function(e6) {
                  r4 = r4.then(function() {
                    return l2(e6, s2, t5, u2).then(function(e7) {
                      e7 && n4.appendChild(e7);
                    });
                  });
                });
              }
              return r4.then(function() {
                return n4;
              });
              function i4(e6) {
                return f.isShadowRoot(e6) ? e6.host : e6;
              }
              function t4(t5) {
                if (f.isShadowSlotElement(t5)) {
                  let e6 = t5.assignedNodes();
                  if (e6 && 0 < e6.length) return e6;
                }
                return t5.childNodes;
              }
            }
            function d2(u3, a3) {
              return !f.isElement(u3) || f.isShadowSlotElement(a3) ? Promise.resolve(u3) : Promise.resolve().then(e5).then(t4).then(n4).then(o3).then(function() {
                return u3;
              });
              function e5() {
                function o4(e7, t5) {
                  t5.font = e7.font, t5.fontFamily = e7.fontFamily, t5.fontFeatureSettings = e7.fontFeatureSettings, t5.fontKerning = e7.fontKerning, t5.fontSize = e7.fontSize, t5.fontStretch = e7.fontStretch, t5.fontStyle = e7.fontStyle, t5.fontVariant = e7.fontVariant, t5.fontVariantCaps = e7.fontVariantCaps, t5.fontVariantEastAsian = e7.fontVariantEastAsian, t5.fontVariantLigatures = e7.fontVariantLigatures, t5.fontVariantNumeric = e7.fontVariantNumeric, t5.fontVariationSettings = e7.fontVariationSettings, t5.fontWeight = e7.fontWeight;
                }
                function e6(e7, t5) {
                  let n5 = h(e7);
                  n5.cssText ? (t5.style.cssText = n5.cssText, o4(n5, t5.style)) : (y(s2, e7, n5, r3, t5), null === r3 && (["inset-block", "inset-block-start", "inset-block-end"].forEach((e8) => t5.style.removeProperty(e8)), ["left", "right", "top", "bottom"].forEach((e8) => {
                    t5.style.getPropertyValue(e8) && t5.style.setProperty(e8, "0px");
                  })));
                }
                e6(a3, u3);
              }
              function t4() {
                let s3 = f.uid();
                function t5(r4) {
                  let i4 = h(a3, r4), l3 = i4.getPropertyValue("content");
                  if ("" !== l3 && "none" !== l3) {
                    let n6 = function() {
                      let e7 = `.${s3}:` + r4, t7 = (i4.cssText ? n7 : o4)();
                      return document.createTextNode(e7 + `{${t7}}`);
                      function n7() {
                        return `${i4.cssText} content: ${l3};`;
                      }
                      function o4() {
                        let e8 = f.asArray(i4).map(t8).join("; ");
                        return e8 + ";";
                        function t8(e9) {
                          let t9 = i4.getPropertyValue(e9), n8 = i4.getPropertyPriority(e9) ? " !important" : "";
                          return e9 + ": " + t9 + n8;
                        }
                      }
                    };
                    var n5 = n6;
                    let e6 = u3.getAttribute("class") || "", t6 = (u3.setAttribute("class", e6 + " " + s3), document.createElement("style"));
                    t6.appendChild(n6()), u3.appendChild(t6);
                  }
                }
                [":before", ":after"].forEach(function(e6) {
                  t5(e6);
                });
              }
              function n4() {
                f.isHTMLTextAreaElement(a3) && (u3.innerHTML = a3.value), f.isHTMLInputElement(a3) && u3.setAttribute("value", a3.value);
              }
              function o3() {
                f.isSVGElement(u3) && (u3.setAttribute("xmlns", "http://www.w3.org/2000/svg"), f.isSVGRectElement(u3)) && ["width", "height"].forEach(function(e6) {
                  let t5 = u3.getAttribute(e6);
                  t5 && u3.style.setProperty(e6, t5);
                });
              }
            }
          }(e3, r2, null, t2);
        }).then(r2.disableEmbedFonts ? Promise.resolve(e2) : c).then(g).then(function(t3) {
          r2.bgcolor && (t3.style.backgroundColor = r2.bgcolor);
          r2.width && (t3.style.width = r2.width + "px");
          r2.height && (t3.style.height = r2.height + "px");
          r2.style && Object.keys(r2.style).forEach(function(e4) {
            t3.style[e4] = r2.style[e4];
          });
          let e3 = null;
          "function" == typeof r2.onclone && (e3 = r2.onclone(t3));
          return Promise.resolve(e3).then(function() {
            return t3;
          });
        }).then(function(e3) {
          let n3 = r2.width || f.width(e3), o2 = r2.height || f.height(e3);
          return Promise.resolve(e3).then(function(e4) {
            return e4.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), new XMLSerializer().serializeToString(e4);
          }).then(f.escapeXhtml).then(function(e4) {
            var t3 = (f.isDimensionMissing(n3) ? ' width="100%"' : ` width="${n3}"`) + (f.isDimensionMissing(o2) ? ' height="100%"' : ` height="${o2}"`);
            return `<svg xmlns="http://www.w3.org/2000/svg"${(f.isDimensionMissing(n3) ? "" : ` width="${n3}"`) + (f.isDimensionMissing(o2) ? "" : ` height="${o2}"`)}><foreignObject${t3}>${e4}</foreignObject></svg>`;
          }).then(function(e4) {
            return "data:image/svg+xml;charset=utf-8," + e4;
          });
        }).then(function(e3) {
          for (; 0 < i2.length; ) {
            var t3 = i2.pop();
            t3.parent.replaceChild(t3.child, t3.wrapper);
          }
          return e3;
        }).then(function(e3) {
          return d.impl.urlCache = [], (() => {
            p && (document.body.removeChild(p), p = null), v && clearTimeout(v), v = setTimeout(() => {
              v = null, w = {};
            }, 2e4);
          })(), e3;
        });
      }
      function i(r2, i2) {
        return a(r2, i2 = i2 || {}).then(f.makeImage).then(function(e2) {
          var t2 = "number" != typeof i2.scale ? 1 : i2.scale, n2 = ((e3, t3) => {
            let n3 = i2.width || f.width(e3), o3 = i2.height || f.height(e3);
            return f.isDimensionMissing(n3) && (n3 = f.isDimensionMissing(o3) ? 300 : 2 * o3), f.isDimensionMissing(o3) && (o3 = n3 / 2), (e3 = document.createElement("canvas")).width = n3 * t3, e3.height = o3 * t3, i2.bgcolor && ((t3 = e3.getContext("2d")).fillStyle = i2.bgcolor, t3.fillRect(0, 0, e3.width, e3.height)), e3;
          })(r2, t2), o2 = n2.getContext("2d");
          return o2.msImageSmoothingEnabled = false, o2.imageSmoothingEnabled = false, e2 && (o2.scale(t2, t2), o2.drawImage(e2, 0, 0)), n2;
        });
      }
      let p = null;
      function c(n2) {
        return e.resolveAll().then(function(e2) {
          var t2;
          return "" !== e2 && (t2 = document.createElement("style"), n2.appendChild(t2), t2.appendChild(document.createTextNode(e2))), n2;
        });
      }
      function g(e2) {
        return n.inlineAll(e2).then(function() {
          return e2;
        });
      }
      function y(i2, l2, s2, u2, e2) {
        let a2 = d.impl.options.copyDefaultStyles ? ((t2, e3) => {
          var n2, o2 = ((e4) => ("relaxed" !== t2.styleCaching ? e4 : e4.filter((e5, t3, n3) => 0 === t3 || t3 === n3.length - 1)).join(">"))(e3 = ((e4) => {
            var t3 = [];
            do {
              if (e4.nodeType === m) {
                var n3 = e4.tagName;
                if (t3.push(n3), E.includes(n3)) break;
              }
            } while (e4 = e4.parentNode);
            return t3;
          })(e3));
          {
            if (w[o2]) return w[o2];
            e3 = ((e4, t3) => {
              let n3 = e4.body;
              do {
                var o3 = t3.pop(), o3 = e4.createElement(o3);
                n3.appendChild(o3), n3 = o3;
              } while (0 < t3.length);
              return n3.textContent = "​", n3;
            })((n2 = (() => {
              if (p) return p.contentWindow;
              t3 = document.characterSet || "UTF-8", e4 = (e4 = document.doctype) ? (`<!DOCTYPE ${s3(e4.name)} ${s3(e4.publicId)} ` + s3(e4.systemId)).trim() + ">" : "", (p = document.createElement("iframe")).id = "domtoimage-sandbox-" + f.uid(), p.style.visibility = "hidden", p.style.position = "fixed", document.body.appendChild(p);
              var e4, t3, n3 = p, o3 = "domtoimage-sandbox";
              try {
                return n3.contentWindow.document.write(e4 + `<html><head><meta charset='${t3}'><title>${o3}</title></head><body></body></html>`), n3.contentWindow;
              } catch (e5) {
              }
              var r3 = document.createElement("meta");
              r3.setAttribute("charset", t3);
              try {
                var i4 = document.implementation.createHTMLDocument(o3), l3 = (i4.head.appendChild(r3), e4 + i4.documentElement.outerHTML);
                return n3.setAttribute("srcdoc", l3), n3.contentWindow;
              } catch (e5) {
              }
              return n3.contentDocument.head.appendChild(r3), n3.contentDocument.title = o3, n3.contentWindow;
              function s3(e5) {
                var t4;
                return e5 ? ((t4 = document.createElement("div")).innerText = e5, t4.innerHTML) : "";
              }
            })()).document, e3), n2 = ((e4, t3) => {
              let n3 = {}, o3 = e4.getComputedStyle(t3);
              return f.asArray(o3).forEach(function(e5) {
                n3[e5] = "width" === e5 || "height" === e5 ? "auto" : o3.getPropertyValue(e5);
              }), n3;
            })(n2, e3);
            var r2 = e3;
            do {
              var i3 = r2.parentElement;
              null !== i3 && i3.removeChild(r2), r2 = i3;
            } while (r2 && "BODY" !== r2.tagName);
            return w[o2] = n2;
          }
        })(i2, l2) : {}, c2 = e2.style;
        f.asArray(s2).forEach(function(e3) {
          var t2, n2, o2, r2;
          i2.filterStyles && !i2.filterStyles(l2, e3) || (n2 = s2.getPropertyValue(e3), o2 = a2[e3], t2 = u2 ? u2.getPropertyValue(e3) : void 0, c2.getPropertyValue(e3)) || (n2 !== o2 || u2 && n2 !== t2) && (o2 = s2.getPropertyPriority(e3), t2 = c2, n2 = n2, o2 = o2, r2 = 0 <= ["background-clip"].indexOf(e3 = e3), o2 ? (t2.setProperty(e3, n2, o2), r2 && t2.setProperty("-webkit-" + e3, n2, o2)) : (t2.setProperty(e3, n2), r2 && t2.setProperty("-webkit-" + e3, n2)));
        });
      }
      let v = null, w = {}, E = ["ADDRESS", "ARTICLE", "ASIDE", "BLOCKQUOTE", "DETAILS", "DIALOG", "DD", "DIV", "DL", "DT", "FIELDSET", "FIGCAPTION", "FIGURE", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "LI", "MAIN", "NAV", "OL", "P", "PRE", "SECTION", "SVG", "TABLE", "UL", "math", "svg", "BODY", "HEAD", "HTML"];
    })(exports);
  }
});
export default require_dom_to_image_more_min();
/*! Bundled license information:

dom-to-image-more/dist/dom-to-image-more.min.js:
  (*! dom-to-image-more 08-05-2025 *)
*/
//# sourceMappingURL=dom-to-image-more.js.map
